{
  "version": 3,
  "sources": ["../../src/backend/index.ts", "../../src/backend/schema/post/entity.ts", "../../src/backend/schema/post/resolver.ts", "../../src/backend/rest-client.ts", "../../src/backend/schema/index.ts"],
  "sourcesContent": ["/* graphql-api Graphweaver Project */\nimport 'reflect-metadata';\nimport Graphweaver from '@exogee/graphweaver-server';\nimport { resolvers } from './schema';\n\nexport const graphweaver = new Graphweaver({\n  resolvers,\n  fileAutoGenerationOptions: {\n    watchForFileChangesInPaths: ['../../frontend/src'],\n  },\n});\n\nexport const handler = graphweaver.handler();\n", "import {\n  GraphQLEntity,\n  SummaryField,\n  Field,\n  ID,\n  ObjectType,\n} from '@exogee/graphweaver';\n\nimport { Post as RestPost } from '../../entities';\n\n@ObjectType('Post')\nexport class Post extends GraphQLEntity<RestPost> {\n  public dataEntity!: RestPost;\n\n  @Field(() => ID)\n  id!: string;\n\n  @SummaryField()\n  @Field(() => String)\n  title!: string;\n\n  @Field(() => String)\n  body!: string;\n\n  @Field(() => String)\n  userId!: string;\n}\n", "import { createBaseResolver, Resolver } from '@exogee/graphweaver';\nimport { RestBackendProvider } from '@exogee/graphweaver-rest';\n\nimport { Post as RestPost } from '../../entities';\nimport { Post } from './entity';\nimport { fetch } from '../../rest-client';\n\n@Resolver(() => Post)\nexport class PostResolver extends createBaseResolver<Post, RestPost>(\n  Post,\n  new RestBackendProvider('Post', {\n    find: async () => {\n      const results = await fetch<RestPost>(`/posts`);\n\n      return results;\n    },\n  }),\n) {}\n", "import got from 'got';\n\nconst baseUrl = process.env.REST_BASE_URL;\n\nexport const fetch = async <T>(path: string) => {\n  return got.get(`${baseUrl}${path}`).json<T[]>();\n};\n", "import { PostResolver } from './post';\n\nexport const resolvers = [PostResolver];\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,8BAAO;AACP,gCAAwB;;;ACFxB,yBAMO;AAKA,IAAM,OAAN,cAAmB,iCAAwB;AAelD;AAfa;AAIX;AAAA,MADC,0BAAM,MAAM,qBAAE;AAAA,GAHJ,KAIX;AAIA;AAAA,MAFC,iCAAa;AAAA,MACb,0BAAM,MAAM,MAAM;AAAA,GAPR,KAQX;AAGA;AAAA,MADC,0BAAM,MAAM,MAAM;AAAA,GAVR,KAWX;AAGA;AAAA,MADC,0BAAM,MAAM,MAAM;AAAA,GAbR,KAcX;AAdW,OAAN;AAAA,MADN,+BAAW,MAAM;AAAA,GACL;;;ACXb,IAAAA,sBAA6C;AAC7C,8BAAoC;;;ACDpC,iBAAgB;AAEhB,IAAM,UAAU,QAAQ,IAAI;AAErB,IAAM,QAAQ,8BAAU,SAAiB;AAC9C,SAAO,WAAAC,QAAI,IAAI,GAAG,UAAU,MAAM,EAAE,KAAU;AAChD,GAFqB;;;ADId,IAAM,eAAN,kBAA2B;AAAA,EAChC;AAAA,EACA,IAAI,4CAAoB,QAAQ;AAAA,IAC9B,MAAM,YAAY;AAChB,YAAM,UAAU,MAAM,MAAgB,QAAQ;AAE9C,aAAO;AAAA,IACT;AAAA,EACF,CAAC;AACH,EAAE;AAAC;AATU;AAAA,eAAN;AAAA,MADN,8BAAS,MAAM,IAAI;AAAA,GACP;;;AENN,IAAM,YAAY,CAAC,YAAY;;;AJG/B,IAAM,cAAc,IAAI,0BAAAC,QAAY;AAAA,EACzC;AAAA,EACA,2BAA2B;AAAA,IACzB,4BAA4B,CAAC,oBAAoB;AAAA,EACnD;AACF,CAAC;AAEM,IAAM,UAAU,YAAY,QAAQ;",
  "names": ["import_graphweaver", "got", "Graphweaver"]
}
